#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 3>;
            then-layer = <3>;
        };
    };

    macros {
        sqt: single_qoutes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "SINGLE_QOUTES";
        };

        dqt: double_quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "DOUBLE_QUOTES";
        };

        grave: grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "GRAVE";
        };

        lbkt: left_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "LEFT_BRACKET";
        };

        rbkt: right_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "RIGHT_BRACKET";
        };

        lbrc: left_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "LEFT_BRACE";
        };

        rbrc: right_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;

            label = "RIGHT_BRACE";
        };

        less_than: less_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;

            label = "LESS_THAN";
        };

        greater_than: greater_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "GREATER_THAN";
        };

        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "COMMA";
        };

        dot: dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "DOT";
        };

        colon: colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;

            label = "COLON";
        };

        semicolon: semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "SEMICOLON";
        };

        ampersand: ampersand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;

            label = "AMPERSAND";
        };

        pipe: pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "PIPE";
        };

        dollar: dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "DOLLAR";
        };

        hash: hash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;

            label = "HASH";
        };

        number: number {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N2 &kp KP_N5 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "NUMBER";
        };

        at: at {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "AT";
        };

        tilde: tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "TILDE";
        };

        caret: caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "CARET";
        };

        question: question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "QUESTION";
        };

        backslash: backslash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "BACKSLASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE   &kp Q  &kp W  &kp E  &kp R            &kp T  &kp Y  &kp U       &kp I      &kp O    &kp P     &kp LBKT
&kp TAB      &kp A  &kp S  &kp D  &kp F            &kp G  &kp H  &kp J       &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&kp LG(TAB)  &kp Z  &kp X  &kp C  &kp V            &kp B  &kp N  &kp M       &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                           &dqt   &mt LCTRL SPACE  &mo 1  &mo 2  &kp LSHIFT  &sqt
            >;
        };

        lower_layer {
            bindings = <
&none  &none     &none     &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp LA(LEFT_SHIFT)  &none      &kp HOME  &kp UP    &kp END    &kp PAGE_UP    &none
&none  &kp LWIN  &kp LALT  &kp LCTRL         &kp LSHIFT         &none               &kp ENTER  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &none
&none  &none     &none     &none             &none              &none               &none      &kp BSPC  &kp DEL   &none      &none          &none
                           &trans            &trans             &trans              &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&none  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &none   &none       &none      &none     &none     &none
&none  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &none   &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LWIN  &none
&none  &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &none   &none       &none      &none     &none     &none
                                   &trans     &trans     &trans        &trans  &trans      &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
&none  &none  &none  &none  &lbkt                 &rbkt                  &dqt    &dqt             &none       &none          &none      &none
&none  &none  &none  &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &sqt    &sqt             &comma      &dot           &none      &none
&none  &none  &none  &none  &lbrc                 &rbrc                  &grave  &kp EXCLAMATION  &less_than  &greater_than  &kp EQUAL  &none
                     &none  &none                 &none                  &none   &none            &none
            >;
        };

        layer_5 {
            bindings = <
&none  &kp KP_SLASH  &kp N7  &kp N8  &kp N9  &kp MINUS   &none   &none       &none      &none     &none     &none
&none  &kp STAR      &kp N4  &kp N5  &kp N6  &kp PLUS    &none   &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LWIN  &none
&none  &kp N0        &kp N1  &kp N2  &kp N3  &kp KP_DOT  &none   &none       &none      &none     &none     &none
                             &trans  &trans  &trans      &trans  &trans      &trans
            >;
        };
    };
};
